/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
  
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        // optimal solution
        ListNode *fast=head;
        ListNode *slow=head;
        for(int i=1;i<=n;i++){
            fast=fast->next;
        }
        if(fast==NULL){
            ListNode *del=head;
            head=head->next;
            delete(del);
            return head;
        }
        
        // ListNode *delnode=NULL;
        while(fast->next !=NULL){
            fast=fast->next;
            slow=slow->next;
        }
      
        ListNode* delnode=slow->next;
        slow->next=slow->next->next;
        delete(delnode);
        return head;
    }
};

learned a new concept that if we have to delete the nth node from the last then
in this question we some how have to reach the node before which to be deleted so 
that we can change the link of node and it will be deleted.

it is an important concept look at it again and try to marinate it.

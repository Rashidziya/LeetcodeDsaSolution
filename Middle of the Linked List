/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int findlen(ListNode *head){
        ListNode *temp=head;
        int count=0;
        while(temp){
            ++count;
            temp=temp->next;
        }
        // cout<<count;
        return count;
        
    }
    ListNode* middleNode(ListNode* head) {
        int n=findlen(head);
        ListNode *middleNode=new ListNode();
        int mid=n/2+1;
        int cnt=0;
        while(head){
            cnt++;
            if(cnt==mid){
                middleNode->val=head->val;
                middleNode->next=head->next;
            }
            head=head->next;
        }
        return middleNode;
    }
};

// time comp=> findlen(O(n))+midelement(O(n/2+1))
// s.c => O(1)
